[
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "AcceptFriendship",
    "RelativePath": "accept-invite",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.Auth.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetReceivedInvites",
    "RelativePath": "api/Friendship/{userId}/received",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetSentInvites",
    "RelativePath": "api/Friendship/{userId}/sent",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "AcceptFriendship",
    "RelativePath": "api/Friendship/accept/{userId}/{friendId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "DebugClaims",
    "RelativePath": "api/Friendship/debug/claims",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetMyFriends",
    "RelativePath": "api/Friendship/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "RemoveFriend",
    "RelativePath": "api/Friendship/remove/{userId}/{friendId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.User.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateFullNameDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/all-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.User.UserResponseDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "GetMe",
    "RelativePath": "api/UserAccount/account-details",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.User.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateAllowFriendInvites",
    "RelativePath": "api/UserAccount/allow-friend-invites",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateAllowFriendInvitesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateAllowMentions",
    "RelativePath": "api/UserAccount/allow-mentions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateAllowMentionsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateUser",
    "RelativePath": "api/UserAccount/change-name",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateFullNameDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "DeleteUser",
    "RelativePath": "api/UserAccount/delete-account",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "BrowseUsers",
    "RelativePath": "browse-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.User.UserResponseDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "CancelInvite",
    "RelativePath": "cancel-send-invite",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetMyFriends",
    "RelativePath": "me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetReceivedInvites",
    "RelativePath": "recieved-invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "RejectInvite",
    "RelativePath": "reject-invite",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requesterId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "RemoveFriend",
    "RelativePath": "remove-friend",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "AddFriendship",
    "RelativePath": "sent-invite",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FriendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetSentInvites",
    "RelativePath": "sent-invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]