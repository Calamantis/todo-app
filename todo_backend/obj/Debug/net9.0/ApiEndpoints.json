[
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "GetSendInvites",
    "RelativePath": "api/ActivityMembers/browse-invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.ActivityMembers.FullActivityMembersDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "GetRevievedInvites",
    "RelativePath": "api/ActivityMembers/browse-recieved",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "CancelInvite",
    "RelativePath": "api/ActivityMembers/cancel-attendance",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "DeleteActivity",
    "RelativePath": "api/ActivityMembers/remove-everyone",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "RemoveParticipant",
    "RelativePath": "api/ActivityMembers/remove-participant",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "targetUserId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "RevokeInvite",
    "RelativePath": "api/ActivityMembers/revoke-invite",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "targetUserId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "SendInvite",
    "RelativePath": "api/ActivityMembers/send-invitation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "invitedUserId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "GetAcceptedInvites",
    "RelativePath": "api/ActivityMembers/show-accepted",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "ShowParticipants",
    "RelativePath": "api/ActivityMembers/show-participants",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.ActivityMembers.FullActivityMembersDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityMembersController",
    "Method": "UpdateInviteStatus",
    "RelativePath": "api/ActivityMembers/update-invite-status",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.ActivityMembers.UpdateInviteStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityStorageController",
    "Method": "GetUserTemplates",
    "RelativePath": "api/ActivityStorage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.ActivityStorage.ActivityStorageDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityStorageController",
    "Method": "CreateTemplate",
    "RelativePath": "api/ActivityStorage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.ActivityStorage.ActivityStorageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.ActivityStorage.ActivityStorageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityStorageController",
    "Method": "GetTemplate",
    "RelativePath": "api/ActivityStorage/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.ActivityStorage.ActivityStorageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityStorageController",
    "Method": "UpdateTemplate",
    "RelativePath": "api/ActivityStorage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.ActivityStorage.ActivityStorageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.ActivityStorage.ActivityStorageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.ActivityStorageController",
    "Method": "DeleteTemplate",
    "RelativePath": "api/ActivityStorage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.Auth.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UserCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.CategoryController",
    "Method": "BrowseCategories",
    "RelativePath": "api/Category/browse-categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Category.CategoryDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.CategoryController",
    "Method": "CreateCategory",
    "RelativePath": "api/Category/create-category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.Category.CategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.CategoryController",
    "Method": "DeleteCategory",
    "RelativePath": "api/Category/delete-category",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "deleteActivities",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.CategoryController",
    "Method": "UpdateCategory",
    "RelativePath": "api/Category/update-category",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.Category.CategoryDto",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetReceivedInvites",
    "RelativePath": "api/Friendship/{userId}/received",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetSentInvites",
    "RelativePath": "api/Friendship/{userId}/sent",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "AcceptFriendship",
    "RelativePath": "api/Friendship/accept/{userId}/{friendId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "DebugClaims",
    "RelativePath": "api/Friendship/debug/claims",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "GetMyFriends",
    "RelativePath": "api/Friendship/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FullFriendshipDetailDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.FriendshipController",
    "Method": "RemoveFriend",
    "RelativePath": "api/Friendship/remove/{userId}/{friendId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.TimelineActivityController",
    "Method": "GetActivities",
    "RelativePath": "api/TimelineActivity/browse-activities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.TimelineActivity.FullTimelineActivityDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.TimelineActivityController",
    "Method": "CreateActivity",
    "RelativePath": "api/TimelineActivity/create-activity",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.TimelineActivity.CreateTimelineActivityDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.TimelineActivity.FullTimelineActivityDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.TimelineActivityController",
    "Method": "DeleteActivity",
    "RelativePath": "api/TimelineActivity/delete-activity",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.TimelineActivityController",
    "Method": "EditActivity",
    "RelativePath": "api/TimelineActivity/edit-activity",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.TimelineActivity.UpdateTimelineActivityDto",
        "IsRequired": true
      },
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.TimelineActivity.FullTimelineActivityDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.TimelineActivityController",
    "Method": "GetActivity",
    "RelativePath": "api/TimelineActivity/find-activity",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activityId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.TimelineActivity.FullTimelineActivityDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.User.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateFullNameDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MyApp.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/User/all-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.User.UserResponseDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "GetMe",
    "RelativePath": "api/UserAccount/account-details",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "todo_backend.Dtos.User.UserResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateAllowFriendInvites",
    "RelativePath": "api/UserAccount/allow-friend-invites",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateAllowFriendInvitesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateAllowMentions",
    "RelativePath": "api/UserAccount/allow-mentions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateAllowMentionsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "UpdateUser",
    "RelativePath": "api/UserAccount/change-name",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.User.UpdateFullNameDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserAccountController",
    "Method": "DeleteUser",
    "RelativePath": "api/UserAccount/delete-account",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "AcceptFriendship",
    "RelativePath": "api/UserFriendActions/accept-invite",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "BrowseUsers",
    "RelativePath": "api/UserFriendActions/browse-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.User.UserResponseDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "CancelInvite",
    "RelativePath": "api/UserFriendActions/cancel-send-invite",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetMyFriends",
    "RelativePath": "api/UserFriendActions/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetReceivedInvites",
    "RelativePath": "api/UserFriendActions/recieved-invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "RejectInvite",
    "RelativePath": "api/UserFriendActions/reject-invite",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requesterId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "RemoveFriend",
    "RelativePath": "api/UserFriendActions/remove-friend",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "friendId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "AddFriendship",
    "RelativePath": "api/UserFriendActions/sent-invite",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "todo_backend.Dtos.Friendship.FriendshipCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "todo_backend.Controllers.UserFriendActionsController",
    "Method": "GetSentInvites",
    "RelativePath": "api/UserFriendActions/sent-invites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[todo_backend.Dtos.Friendship.FriendshipDto, todo_backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]